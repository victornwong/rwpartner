<?xml version="1.0" encoding="UTF-8"?>
<?page id="serviceticks_mod"?>
<zk>
<zscript src="../rwglobal/rwglobaldefs.zs" />
<zscript src="../rwglobal/rwsqlfuncs.zs" />
<zscript src="../rwglobal/uploadDocu_v1.zs" />
<zscript src="../rwglobal/uploadedWorksheet_v1.zs" />
<zscript>
<![CDATA[
MYTITLE = "Service Tickets";
MYVERSION = "v0.3";
MYPANEL = "servtickpan";
/*
Title		: Service tickets thing for outsource partner
Written by	: Victor Wong
Dated		: 13/08/2013

18/10/2013: Button to generate DO

*/
import java.text.*;
import java.util.*;
import java.io.*;
import org.apache.poi.hssf.usermodel.*;
//import org.apache.poi.xssf.usermodel.*;
import org.apache.poi.ss.util.*;
import org.apache.poi.ss.usermodel.*;
import org.zkoss.util.media.*;
import org.victor.*;
Generals kiboo = new Generals();
ListboxHandler lbhand = new ListboxHandler();
SqlFuncs sqlhand = new SqlFuncs();
GuiFuncs guihand = new GuiFuncs();
DMSFuncs dmshand = new DMSFuncs();
GridHandler gridhand = new GridHandler();
SecurityFuncs sechand = new SecurityFuncs();
os_useraccessobj = sechand.itest_getUserAccessObject();
if(os_useraccessobj == null) Executions.sendRedirect("index.zul");
myincludeid = Executions.getCurrent().getParameter("myid");

WORKPAN_COLOR = "#2e3436";
HDCOLOR = "#ffffff";

glob_sel_ticket = "";
glob_ticket_status = "";
global_sel_customerid = "";
global_sel_customername = "";
glob_tk_pickup = "";
glob_tk_resolv = "";
glob_sel_ticket_li = null;

SimpleDateFormat dtf = new SimpleDateFormat("yyyy-MM-dd");

void toggItemButts(boolean iwhat)
{
	adddoitm_b.setDisabled(iwhat);
	remdoitm_b.setDisabled(iwhat);
	savedoitems_b.setDisabled(iwhat);
	printdo_b.setDisabled(!iwhat);
}

void showTicketMetadata(String iwhat)
{
	tkr = getHelpTicket_rec(iwhat);
	if(tkr == null) { guihand.showMessageBox("ERR: Cannot access database.."); return; }

	csv_hd.setValue("Service ticket: " + TICKETSV_PREFIX + " " + iwhat);

	t_cust_caller.setValue( kiboo.checkNullString(tkr.get("cust_caller")) );
	t_cust_caller_phone.setValue( kiboo.checkNullString(tkr.get("cust_caller_phone")) );
	t_cust_caller_des.setValue( kiboo.checkNullString(tkr.get("cust_caller_des")) );
	t_cust_caller_email.setValue( kiboo.checkNullString(tkr.get("cust_caller_email")) );
	t_cust_location.setValue( kiboo.checkNullString(tkr.get("cust_location")) );
	t_asset_tag.setValue( kiboo.checkNullString(tkr.get("asset_tag")) );
	t_serial_no.setValue( kiboo.checkNullString(tkr.get("serial_no")) );
	t_product_name.setValue( kiboo.checkNullString(tkr.get("product_name")) );

	t_problem.setValue( kiboo.checkNullString(tkr.get("problem")) );
	t_action.setValue( kiboo.checkNullString(tkr.get("action")) );
	//t_resolved_by.setValue( kiboo.checkNullString(tkr.get("resolved_by")) );
	//t_resolved_on
	//t_resolve_type.setValue( kiboo.checkNullString(tkr.get("resolve_type")) );
	//lbhand.matchListboxItems( t_resolve_type, tkr.get("resolve_type") );
	t_resolution.setValue( kiboo.checkNullString(tkr.get("resolution")) );
	t_os_resolution.setValue( kiboo.checkNullString(tkr.get("os_resolution")) );

	fillDocumentsList(documents_holder,TICKETSV_PREFIX,iwhat);

	// 18/10/2013: show outsource DO items if any..
	dostt = false;
	if(doitems_holder.getFellowIfAny("doitems_grid") != null) doitems_grid.setParent(null);
	checkMakeItemsGrid();
	ktg = sqlhand.clobToString(tkr.get("os_do_items"));
	if(!ktg.equals(""))
	{
		icods = sqlhand.clobToString(tkr.get("os_do_codes")).split("~");
		idesc = sqlhand.clobToString(tkr.get("os_do_items")).split("~");
		iqty = sqlhand.clobToString(tkr.get("os_do_qty")).split("~");

		dostt = (tkr.get("os_do_stat") == null) ? false : ( (tkr.get("os_do_stat")) ? true : false );
		
		kfb = "font-weight:bold";

		for(i=0; i<idesc.length; i++)
		{
			nrw = new org.zkoss.zul.Row();
			nrw.setParent(doitems_rows);

			pck = gpMakeCheckbox(nrw,"","","");
			
			x_icods = "";
			try { x_icods = icods[i]; } catch (Exception e) {}
			x_idesc = "";
			try { x_idesc = idesc[i]; } catch (Exception e) {}
			x_iqty = "";
			try { x_iqty = iqty[i]; } catch (Exception e) {}
			
			if(dostt)
			{
				pck.setDisabled(true);
				gpMakeLabel(nrw, "", x_icods, kfb);
				klb = gpMakeLabel(nrw, "", x_idesc, kfb);
				klb.setMultiline(true);
				gpMakeLabel(nrw, "", x_iqty, kfb);
			}
			else
			{
				gpMakeTextbox(nrw,"",x_icods,kfb,"99%");
				desb = gpMakeTextbox(nrw,"",x_idesc,kfb,"99%");
				desb.setMultiline(true);
				desb.setHeight("40px");
				gpMakeTextbox(nrw,"",x_iqty,kfb,"99%");
			}
		}
	}

	toggItemButts(dostt);
	//printdo_b.setDisabled( (dostt) ? false : true ); // Print DO button active when DO is committed
	dostat_hd.setValue( (dostt) ? "DO status: COMMITTED" : "DO status: DRAFT" );
}

Object[] tkslb_headers =
{
	new listboxHeaderWidthObj("CSV#",true,"40px"),
	new listboxHeaderWidthObj("Dated",true,"65px"),
	new listboxHeaderWidthObj("Customer",true,""),
	new listboxHeaderWidthObj("Priority",true,"60px"),
	new listboxHeaderWidthObj("Status",true,"60px"),
	new listboxHeaderWidthObj("RWUser",true,"60px"),
	new listboxHeaderWidthObj("Pickup",true,"60px"),
	new listboxHeaderWidthObj("OSUser",true,"60px"),
	new listboxHeaderWidthObj("Resolv",true,"60px"),
};

TK_PICKUP_C = 6;
TK_RESOLV_C = 8;

class tkslbClick implements org.zkoss.zk.ui.event.EventListener
{
	public void onEvent(Event event) throws UiException
	{
		isel = event.getReference();
		glob_sel_ticket_li = isel;
		glob_sel_ticket = lbhand.getListcellItemLabel(isel,0);
		glob_tk_pickup = lbhand.getListcellItemLabel(isel,TK_PICKUP_C);
		glob_tk_resolv = lbhand.getListcellItemLabel(isel,TK_RESOLV_C);

		if(!glob_tk_pickup.equals("")) // only pickup ticket show details
		{
			showTicketMetadata(glob_sel_ticket);
			tickmeta_div.setVisible(true);
		}
	}
}

void showTickets()
{
	scht = kiboo.replaceSingleQuotes( searhtxt_tb.getValue().trim() );
	sdate = kiboo.getDateFromDatebox(startdate);
    edate = kiboo.getDateFromDatebox(enddate);

    Listbox newlb = lbhand.makeVWListbox_Width(tickets_holder, tkslb_headers, "tickets_lb", 15);

    scsql = "";
	if(!scht.equals("")) scsql = "and cust_name like '%" + scht + "%' ";

	sqlstm = "select origid,calldatetime,cust_name,priority,tstatus,createdby,os_pickup,os_resolvedate,os_user from rw_helptickets " +
	"where calldatetime between '" + sdate + " 00:00:00' and '" + edate + " 23:59:00' " +
	"and os_id='" + os_useraccessobj.ar_code + "' and (tstatus='OPEN' or tstatus='CLOSE') " +
	scsql + "order by origid";

	tksr = sqlhand.gpSqlGetRows(sqlstm);
	newlb.setMold("paging");
	newlb.addEventListener("onSelect", new tkslbClick());
	ArrayList kabom = new ArrayList();
	for(dpi : tksr)
	{
		kabom.add(dpi.get("origid").toString());
		kabom.add( dtf.format(dpi.get("calldatetime")) );
		kabom.add(kiboo.checkNullString(dpi.get("cust_name")));
		tprio = kiboo.checkNullString(dpi.get("priority"));
		kabom.add(tprio);
		kabom.add(kiboo.checkNullString(dpi.get("tstatus")));
		kabom.add(kiboo.checkNullString(dpi.get("createdby")));

		ospk = (dpi.get("os_pickup") == null) ? "" : dtf.format( dpi.get("os_pickup") );
		kabom.add(ospk);
		kabom.add(kiboo.checkNullString(dpi.get("os_user")));
		osre = (dpi.get("os_resolvedate") == null) ? "" : dtf.format( dpi.get("os_resolvedate") );
		kabom.add(osre);

		mysty = "";
		if(tprio.equals("CRITICAL")) mysty = "font-size:9px;" + CRITICAL_BACKGROUND;
		if(tprio.equals("URGENT")) mysty = "font-size:9px;" + URGENT_BACKGROUND;
		
		lbhand.insertListItems(newlb,kiboo.convertArrayListToStringArray(kabom),"false",mysty);
		kabom.clear();
	}

	workarea.setVisible(true);
}

void doFunc(Object iwhat)
{
	itype = iwhat.getId();
	todaydate = kiboo.todayISODateTimeString();
	sqlstm = "";
	refreshtickets = false;
	msgtext = "";

	if(glob_sel_ticket.equals("")) return;

	lnkc = TICKETSV_PREFIX + glob_sel_ticket;
	usnm = os_useraccessobj.ar_code + " " + os_useraccessobj.username;

	if(itype.equals("pickup_b"))
	{
		if(!glob_tk_pickup.equals(""))
		{
			msgtext = "Ticket was already pickup..";
		}
		else
		{
		sqlstm = "update rw_helptickets set os_user='" + os_useraccessobj.username + "', os_pickup='" + todaydate + "' where origid=" + glob_sel_ticket;
		refreshtickets = true;
		add_RWAuditLog(lnkc,os_useraccessobj.ar_code,"OS pickup ticket",usnm);
		}
	}

	if(itype.equals("resolve_b"))
	{
		if(glob_tk_pickup.equals(""))
		{
			msgtext = "Please pickup ticket first to resolve it";
		}
		else
		if(!glob_tk_resolv.equals(""))
		{
			msgtext = "Ticket was resolved..";
		}
		else
		{
			ticketresolve_hd.setValue("Case ticket: " + glob_sel_ticket);
			t_os_resolution.setValue("");
			resolvepop.open(glob_sel_ticket_li);
		}
	}

	if(itype.equals("osresolve_b"))
	{
		rtxt = kiboo.replaceSingleQuotes( os_resolution_inp.getValue().trim() );
		if(rtxt.equals(""))
		{
			msgtext = "ERR: Please enter your resolution text..";
		}
		else
		{
			sqlstm = "update rw_helptickets set os_resolvedate='" + todaydate + "', " + 
			"os_resolution='" + rtxt + "' where origid=" + glob_sel_ticket;

			refreshtickets = true;
			resolvepop.close();

			showTicketMetadata(glob_sel_ticket); // reload meta
			add_RWAuditLog(lnkc,os_useraccessobj.ar_code,"OS resolve ticket",usnm);
		}
	}

	if(itype.equals("gendo_b"))
	{
		if(glob_sel_ticket.equals("")) return;

		// show DO things

		doman_pop.open(glob_sel_ticket_li);
	}

	if(!sqlstm.equals("")) sqlhand.gpSqlExecuter(sqlstm);
	if(refreshtickets) showTickets();
	if(!msgtext.equals("")) guihand.showMessageBox(msgtext);
}

void adminFunc(Object iwhat)
{
	itype = iwhat.getId();
	todaydate =  kiboo.todayISODateTimeString();
	refreshtickets = false;
	msgtext = "";
	sqlstm = "";

	if(glob_sel_ticket.equals("")) return;

	if(itype.equals("a_clrpickup")) // clr os_pickup
	{
		sqlstm = "update rw_helptickets set os_pickup=null, os_user=null where origid=" + glob_sel_ticket;
		refreshtickets = true;
	}

	if(itype.equals("a_clrresolv")) // clr os_resolvedate
	{
		sqlstm = "update rw_helptickets set os_resolvedate=null, os_resolution=null where origid=" + glob_sel_ticket;
		refreshtickets = true;
	}

	if(!sqlstm.equals("")) sqlhand.gpSqlExecuter(sqlstm);
	if(refreshtickets) showTickets();
	if(!msgtext.equals("")) guihand.showMessageBox(msgtext);

	tickmeta_div.setVisible(false);
	glob_sel_ticket = ""; // reset
	adminpop.close();
}

void itemFunc(Object iwhat)
{
	itype = iwhat.getId();
	todaydate =  kiboo.todayISODateTimeString();
	refresh = true;
	sqlstm = msgtext = "";

	if(itype.equals("adddoitm_b"))
	{
		checkMakeItemsGrid();
		irow = gridhand.gridMakeRow("","","",doitems_rows);
		gpMakeCheckbox(irow,"", "","");
		gpMakeTextbox(irow,"","","font-weight:bold;","99%"); // asset/part tag
		desb = gpMakeTextbox(irow,"","","font-weight:bold;","99%"); // item desc
		desb.setMultiline(true);
		desb.setHeight("40px");
		gpMakeTextbox(irow,"","","font-weight:bold;","99%"); // qty
	}

	if(itype.equals("remdoitm_b"))
	{
		removeDOItems(doitems_rows);
	}

	if(itype.equals("savedoitems_b"))
	{
		saveDOItems(glob_sel_ticket);
	}

	if(itype.equals("commitdo_b"))
	{
		sqlstm = "update rw_helptickets set os_do_stat=1 where origid=" + glob_sel_ticket;
		dostat_hd.setValue("DO status: COMMITTED");
		toggItemButts(true);
	}

	if(itype.equals("ucommitdo_b"))
	{
		sqlstm = "update rw_helptickets set os_do_stat=0 where origid=" + glob_sel_ticket;
		dostat_hd.setValue("DO status: DRAFT");
		toggItemButts(false);
	}

	if(itype.equals("printdo_b"))
	{
		genDOPrint(glob_sel_ticket);
		doman_pop.close();
	}

	if(!sqlstm.equals("")) sqlhand.gpSqlExecuter(sqlstm);
	//if(refresh) showPRList();
	if(!msgtext.equals("")) guihand.showMessageBox(msgtext);
}

void genDOPrint(String idid)
{
	startadder = 0;
	rowcount = 2 + startadder;
	//todaydate =  kiboo.todayISODateTimeString();

	templatefn = "rwimg/doTemplate_outsrc_1.xls";
	inpfn = session.getWebApp().getRealPath(templatefn);
	InputStream inp = new FileInputStream(inpfn);
	HSSFWorkbook excelWB = new HSSFWorkbook(inp);
	evaluator = excelWB.getCreationHelper().createFormulaEvaluator();
	HSSFSheet sheet = excelWB.getSheetAt(0);
	Font wfont = excelWB.createFont();
	wfont.setFontHeightInPoints((short)8);
	wfont.setFontName("Arial");

	tkr = getHelpTicket_rec(idid);
	if(tkr == null)
	{
		guihand.showMessageBox("DBERR: Cannot access help-tickets table..Notify RENTWISE");
		return;
	}

	dets1 =
	"DELIVER TO:\n" + kiboo.checkNullString(tkr.get("cust_name")) + "\n" +
	kiboo.checkNullString(tkr.get("cust_location")) +
	"\n\nATTENTION: " + kiboo.checkNullString(tkr.get("cust_caller")) + 
	"\nTEL: " + kiboo.checkNullString(tkr.get("cust_caller_phone"));

	excelInsertString(sheet,0,0, dets1 );

	dets2 =
	"DO Dated: " + dtf.format(new Date()) +
	"\nCSV#: " + idid +
	"\nA.By: " + tkr.get("createdby") +
	"\nPartner: " + tkr.get("os_id");

	excelInsertString(sheet,0,3, dets2 );

	// chop DO items and put into worksheet

	ktg = sqlhand.clobToString(tkr.get("os_do_items"));
	if(!ktg.equals(""))
	{
		String[] dohds = { "No.","Asset/Parts Tag","Description","Qty" };
		for(i=0;i<dohds.length;i++)
		{
			POI_CellSetAllBorders(excelWB,excelInsertString( sheet, rowcount + startadder, i, dohds[i] ),wfont,true,"");
		}

		icods = sqlhand.clobToString(tkr.get("os_do_codes")).split("~");
		idesc = sqlhand.clobToString(tkr.get("os_do_items")).split("~");
		iqty = sqlhand.clobToString(tkr.get("os_do_qty")).split("~");

		lnct = 1;

		for(i=0; i<idesc.length; i++)
		{
			rowcount++;
			POI_CellSetAllBorders(excelWB,excelInsertString( sheet, rowcount + startadder, 0, lnct.toString() + "."),
				wfont,true,"");

			POI_CellSetAllBorders(excelWB,excelInsertString( sheet, rowcount + startadder, 1, icods[i] ),wfont,true,"");
			POI_CellSetAllBorders(excelWB,excelInsertString( sheet, rowcount + startadder, 2, idesc[i] ),wfont,true,"");
			POI_CellSetAllBorders(excelWB,excelInsertString( sheet, rowcount + startadder, 3, iqty[i] ),wfont,true,"");
		}

		lnct++;
	}

	tfname = OSDO_PREFIX + idid + "_outp.xls";
	outfn = session.getWebApp().getRealPath("tmp/" + tfname );
	FileOutputStream fileOut = new FileOutputStream(outfn);
	excelWB.write(fileOut);
	fileOut.close();

	downloadFile(kasiexport,tfname,outfn);
}

void saveDOItems(String iwhat)
{
	if(doitems_holder.getFellowIfAny("doitems_grid") == null) return;
	cds = doitems_rows.getChildren().toArray();
	//if(cds.length < 1) return;
	idesc = iqty = icods = "";
	colcount = 0;
	refresh = false;
	todaydate =  kiboo.todayISODateTimeString();

	for(i=0; i<cds.length; i++)
	{
		c1 = cds[i].getChildren().toArray();
		icods += kiboo.replaceSingleQuotes( c1[1].getValue().replaceAll("~"," ") ) + "~";
		idesc += kiboo.replaceSingleQuotes( c1[2].getValue().replaceAll("~"," ") ) + "~";
		iqty += kiboo.replaceSingleQuotes( c1[3].getValue().replaceAll("~"," ") ) + "~";
	}

	try {
	icods = icods.substring(0,icods.length()-1);
	} catch (Exception e) {}

	try {
	idesc = idesc.substring(0,idesc.length()-1);
	} catch (Exception e) {}

	try {
	iqty = iqty.substring(0,iqty.length()-1);
	} catch (Exception e) {}

	sqlstm = "update rw_helptickets set os_do_items='" + idesc + "', os_do_qty='" + iqty + "', os_do_codes='" + icods + "' " +
	"where origid=" + iwhat;
	sqlhand.gpSqlExecuter(sqlstm);
	guihand.showMessageBox("DO items saved..");
}

void removeDOItems(Object irows)
{
	cds = irows.getChildren().toArray();
	if(cds.length < 1) return;
	for(i=0; i<cds.length; i++)
	{
		c1 = cds[i].getChildren().toArray();
		if(c1[0].isChecked()) cds[i].setParent(null);
	}
}

void checkMakeItemsGrid()
{
	String[] colws = { "30px","170px" ,""				,"60px" };
	String[] colls = { ""    ,"Asset/Parts Tag","Item description","Qty"  };

	if(doitems_holder.getFellowIfAny("doitems_grid") == null) // make new grid if none
	{
		igrd = new Grid();
		igrd.setId("doitems_grid");

		icols = new org.zkoss.zul.Columns();
		for(i=0;i<colws.length;i++)
		{
			ico0 = new org.zkoss.zul.Column();
			ico0.setWidth(colws[i]);
			ico0.setLabel(colls[i]);
			ico0.setAlign("center");
			ico0.setStyle("background:#97b83a");
			ico0.setParent(icols);
		}

		icols.setParent(igrd);

		irows = new org.zkoss.zul.Rows();
		irows.setId("doitems_rows");
		irows.setParent(igrd);
		igrd.setParent(doitems_holder);
	}
}

// Some glob UI defs
TICKETS_DIV = "650px";

]]>
</zscript>

<popup id="doman_pop">
<div sclass="shadowbox" style="background:#555753;" width="700px">

<separator height="3px" />
<label sclass="subhead2">Delivery Order</label>
<separator height="6px" bar="true" />
<hbox>
	<button id="adddoitm_b" label="Add item" style="font-size:9px" onClick="itemFunc(self)" />
	<button id="remdoitm_b" label="Remove" style="font-size:9px" onClick="itemFunc(self)" />
	<button id="savedoitems_b" label="SAVE" style="font-weight:bold" onClick="itemFunc(self)" />
	<separator width="10px" />
	<button id="commitdo_b" label="Commit DO" style="font-weight:bold" onClick="itemFunc(self)" />
	<button id="printdo_b" label="Export/Print" style="font-weight:bold" onClick="itemFunc(self)" />
	<separator width="10px" />
	<label id="dostat_hd" style="color:#ffffff" />
	<button id="ucommitdo_b" label="UNCOMMIT" style="color:#ff0000" visible="false" onClick="itemFunc(self)" />
</hbox>

<separator height="5px" />
<div id="doitems_holder" />

</div>
</popup>

<popup id="resolvepop">
<div sclass="shadowbox" style="background:#73d216;">
	<label id="ticketresolve_hd" style="color:#000000;font-weight:bold" />
	<separator height="3px" />
	<label style="color:#000000">Partner resolution notes</label>
	<textbox id="os_resolution_inp" multiline="true" width="99%" height="80px" />
	<button id="osresolve_b" label="Resolve ticket" onClick="doFunc(self)" />
</div>
</popup>

<popup id="adminpop">
<button id="a_clrpickup" label="Clr os_pickup" onClick="adminFunc(self)" />
<button id="a_clrresolv" label="Clr os_resolvedate" onClick="adminFunc(self)" />
</popup>

<!-- update file description popup -->
<popup id="updatefiledesc_popup">
<groupbox width="400px">
	<caption id="updatefiledesc_label" />
	<label value="Description" style="font-size:9px" />
	<textbox id="update_file_description" multiline="true" height="70px" width="99%" style="font-size:9px" />
	<separator height="3px" />
	<hbox>
		<button label="Update" style="font-size:9px" onClick="updateFileDescription(documents_holder,TICKETSV_PREFIX,glob_sel_ticket)" />
		<button label="Close" style="font-size:9px" onClick="updatefiledesc_popup.close()" />
	</hbox>
</groupbox>

</popup>

<!-- upload a file popup -->
<popup id="uploadfile_popup">
<groupbox width="400px">
<caption label="Upload a file" />
	<grid>
		<rows>
			<row>
				<label value="Filename" style="font-size:9px" />
				<textbox id="fileupl_file_title" width="200px" style="font-size:9px" />
			</row>
			<row>
				<label value="Description" style="font-size:9px" />
				<textbox id="fileupl_file_description" multiline="true" height="60px" width="200px" style="font-size:9px" />
			</row>
		</rows>
	</grid>
</groupbox>
<separator height="3px" />
<hbox>
	<button label="Upload" upload="true" onUpload="uploadFile(documents_holder,TICKETSV_PREFIX,glob_sel_ticket,event.getMedias())" />
	<button label="Close" onClick="uploadfile_popup.close()"  style="font-size:9px" />
</hbox>
</popup>

<!-- ADDED 19/08/2013: to authorize viewing of file -->
<popup id="authorizeviewfile_pop">
<div>
	<label value="Authorization code" />
	<textbox id="authorizeview_tb" type="password" />
	<button label="View" onClick="authorize_viewFile(somewindows,authorizeview_tb.getValue())" />
</div>
</popup>

<!-- ENDOF documents attachment popups -->

<style>
.subhead2 {	font-size:18px;	font-weight:bold; color:#ffffff; text-shadow: 1px 1px #000000; }
.subhead1 {	font-size:16px; font-weight:bold; color:#ffffff; text-shadow: 1px 1px #000000; }
.shadowbox { -moz-box-shadow: 4px 5px 7px #000000; -webkit-box-shadow: 4px 5px 7px #000000; box-shadow: 4px 5px 7px #000000;padding:3px;margin:3px }
.strip1 { font-size:9px;font-weight:bold;color:#ffffff }
</style>

<div width="1000px">
<panel id="${MYPANEL}" title="${MYTITLE} ${MYVERSION}" border="normal" collapsible="true" closable="true" >
<panelchildren>
<separator height="8px" />
<hbox>
	<label value="Start date" />
	<datebox id="startdate" format="yyyy-MM-dd" onCreate="self.value = new Date()" />
	<label value="End date" />
	<datebox id="enddate" format="yyyy-MM-dd" onCreate="self.value = new Date()" />
	<separator width="5px" />

	<label value="Search" />
	<textbox id="searhtxt_tb" width="200px" />
	<button label="Load" onClick="showTickets()" />
</hbox>
<separator height="5px" />
<separator bar="true" height="5px" />
<separator height="5px" />

<div id="workarea" visible="false" >

<hbox>
	<button id="pickup_b" label="Pickup ticket" onClick="doFunc(self)" />
	<button id="resolve_b" label="Resolve" onClick="doFunc(self)" />
	<label style="font-size:9px">(Pickup ticket first to view details)</label>
	<separator width="20px" />
	<button id="gendo_b" label="Generate DO" onClick="doFunc(self)" />
	<button id="admin_b" label="ADMIN" style="color:#ff0000" visible="false" onClick="adminpop.open(self)" />
</hbox>

<separator height="5px" />

<hbox> <!-- workarea hbox -->

<vbox>
<div id="tickets_holder" width="${TICKETS_DIV}" />

<div style="" width="${TICKETS_DIV}" >

<div style="background:#2e3436;padding:2px">
<label sclass="subhead1">Documents / Attachments</label>
</div>
<separator height="3px" />
<hbox>
	<button id="uploaddoc_btn" label="Upload file" style="font-size:9px" onClick="showUploadPopup(TICKETSV_PREFIX,glob_sel_ticket)" />
	<button id="viewdoc_btn" label="View file" style="font-size:9px" onClick="authorizeviewfile_pop.open(self)" />
	<!-- <button id="editdoc_btn" label="Update" style="font-size:9px" onClick="updatefiledesc_popup.open(editdoc_btn)" /> -->
	<!-- <button id="deletedoc_btn" label="Delete" style="font-size:9px" onClick="deleteFile(documents_holder,TICKETSV_PREFIX,glob_sel_ticket)" /> -->
</hbox>
<separator height="3px" />
<div id="documents_holder" />

</div>

</vbox>

<vbox id="tickmeta_div" style="background:#c1d5e1;padding:2px" visible="false" >

<div style="background:#f57900;padding:2px">
<label id="csv_hd" sclass="subhead1" />
</div>

<div style="background:${WORKPAN_COLOR};padding:2px">
<label value="Your resolution notes" sclass="strip1" />
</div>
<label id="t_os_resolution" multiline="true" />

<div style="background:${WORKPAN_COLOR};padding:2px">
<label value="Caller" sclass="strip1" />
</div>
<label id="t_cust_caller" />

<div style="background:${WORKPAN_COLOR};padding:2px">
<label value="Tel/HP Contact" sclass="strip1" />
</div>
<label id="t_cust_caller_phone" />

<div style="background:${WORKPAN_COLOR};padding:2px">
<label value="Designation" sclass="strip1" />
</div>
<label id="t_cust_caller_des" />

<div style="background:${WORKPAN_COLOR};padding:2px">
<label value="Email" sclass="strip1" />
</div>
<label id="t_cust_caller_email" />

<div style="background:${WORKPAN_COLOR};padding:2px">
<label value="Customer location" sclass="strip1" />
</div>
<label id="t_cust_location" multiline="true" />

<div style="background:${WORKPAN_COLOR};padding:2px">
<label value="Asset Tag" sclass="strip1" />
</div>
<label id="t_asset_tag" />

<div style="background:${WORKPAN_COLOR};padding:2px">
<label value="S/Num" sclass="strip1" />
</div>
<label id="t_serial_no" />

<div style="background:${WORKPAN_COLOR};padding:2px">
<label value="Product name" sclass="strip1" />
</div>
<label id="t_product_name" />

<div style="background:${WORKPAN_COLOR};padding:2px">
<label value="Problem" sclass="strip1" />
</div>
<label id="t_problem" multiline="true" />

<div style="background:${WORKPAN_COLOR};padding:2px">
<label value="Action" sclass="strip1" />
</div>
<label id="t_action" multiline="true" />

<div style="background:${WORKPAN_COLOR};padding:2px">
<label value="RW Resolution" sclass="strip1" />
</div>
<label id="t_resolution" multiline="true" />

</vbox>

</hbox> <!-- ENDOF workarea hbox -->

</div> <!-- ENDOF div workarea -->

<div id="somewindows" />
<div id="kasiexport" />

<zscript>
<![CDATA[

if(os_useraccessobj.username.equals("metest"))
{
	ucommitdo_b.setVisible(true);
}

//if(os_useraccessobj.username.equals("eis")) admin_b.setVisible(true); // HARDCODED admin-user for EIS (TODO CHG PWD)

]]>
</zscript>
</panelchildren>
</panel>
</div>
</zk>

